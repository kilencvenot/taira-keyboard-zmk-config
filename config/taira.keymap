/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_hu.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define HYPER   4
#define GAME    5

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * .----------------------------------------------------------------------------------------------------------------------------------.
 * |  `   |   1  |   2  |   3  |   4  |   5  |                                              |   6  |   7  |   8  |   9  |   0  | PScr |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |                                              |   Y  |   U  |   I  |   O  |   P  |  \   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Tab  |   A  |   S  |   D  |   F  |   G  |                                              |   H  |   J  |   K  |   L  |   ;  |  '   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |      | Del  | PGDN  | | PGUP  | Home  |      |   N  |   M  |   ,  |   .  |   /  | Shift|
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Ctrl | Alt  | Meta | Alt  |             | Meta | Space| Lower | | Raise | Enter | RAlt |             | LEFT | DOWN | UP   | RIGHT|
 * .----------------------------------------------------------------------------------------------------------------------------------.
 */

            bindings = <
&kp ESCAPE  &kp HU_N0     &kp HU_N1  &kp HU_N2  &kp HU_N3  &kp HU_N4                                                                                &kp HU_N5  &kp HU_N6  &kp HU_N7  &kp HU_N8   &kp HU_N9        &kp HU_O_UMLAUT
&kp DELETE  &kp Q         &kp W      &kp E      &kp R      &kp T                                                                                    &kp HU_Y   &kp U      &kp I      &kp O       &kp P            &kp BACKSPACE
&kp TAB     &kp A         &kp S      &kp D      &kp F      &kp G                                                                                    &kp H      &kp J      &kp K      &kp L       &kp HU_U_UMLAUT  &kp ENTER
&kp LSHFT   &kp HU_Z      &kp X      &kp C      &kp V      &kp B             &kp DEL    &kp ENTER  &kp DELETE      &kp UP_ARROW                     &kp N      &kp M      &kp COMMA  &kp DOT     &kp HU_MINUS     &kp RSHFT
&kp LCTRL   &kp LEFT_ALT  &kp LMETA  &kp SPACE                        &mo 1  &kp SPACE  &kp LCTRL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW                        &kp SPACE  &kp DELETE  &kp LCTRL        &kp ESCAPE
            >;
        };

        accent {
            bindings = <
&trans  &trans            &trans            &trans          &trans            &trans                                                            &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT      &kp C_VOL_DN    &kp C_VOL_UP           &kp HU_O_DOUBLE_ACUTE
&trans  &kp LC(LS(HU_Q))  &kp LC(LS(HU_W))  &kp HU_E_ACUTE  &kp LC(LS(HU_R))  &kp LC(LS(HU_T))                                                  &trans          &kp HU_U_ACUTE    &kp HU_I_ACUTE  &kp HU_O_ACUTE  &trans                 &kp DEL
&trans  &kp HU_A_ACUTE    &kp LC(LS(HU_S))  &kp LC(LS(D))   &kp LC(LS(HU_F))  &kp LC(LS(G))                                                     &trans          &trans            &trans          &trans          &kp HU_U_DOUBLE_ACUTE  &trans
&trans  &kp LC(LS(Z))     &kp LC(LS(HU_X))  &kp LC(LS(C))   &kp LC(LS(HU_V))  &kp LC(LS(B))             &trans  &trans  &trans  &trans          &trans          &kp C_MUTE        &trans          &trans          &trans                 &trans
&trans  &trans            &trans            &trans                                              &trans  &trans  &trans  &trans  &trans  &trans                                    &trans          &trans          &trans                 &trans
            >;
        };
    };
};
